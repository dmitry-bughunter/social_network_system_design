@startuml
!include https://raw.githubusercontent.com/plantuml-stdlib/C4-PlantUML/master/C4_Container.puml

Person(user, "User")
Container(reverseProxy, "Reverse proxy", "Nginx")
Container(apiGateway, "API Gateway", "Spring Cloud Gateway")
Container(postSystem, "Post system", "Software system", "Handles and stores posts")
Container(followingSystem, "Following system", "Software system", "Stores information about subscriptions")
Container(recommendSystem, "Recommend system", "Third-party software system", "Recommends post for user feed")
ContainerQueue(postMessageQueue, "Post lifecycle events queue", "Kafka", "Post events")
ContainerQueue(recommendationsMessageQueue, "Recommendations queue", "Kafka", "Recommended posts")
ContainerQueue(subscriptionsQueue, "Subcription events topic", "Kafka", "Subscription events")

System_Boundary(feedSystem, "Feed system") {
Container(feedService, "Feed Service", "Java", "Generates personalized feeds of posts for users based on their subscriptions/recommendations", $tags="webApp")
ContainerDb(feedDatabase, "Feed database", "PostgreSQL", "Stores feeds",  $tags="db")
}

Rel(user, reverseProxy, "Gets feed", "REST")
Rel(reverseProxy, apiGateway, "Gets feed", "REST")
Rel(apiGateway, feedService, "Gets feed", "REST")
Rel(feedService, postSystem, "Gets post full info", "REST")
Rel(feedService, feedDatabase, "Gets/Saves feed items")

Rel(feedService, postMessageQueue, "Consume POST_CREATED event and update followers feeds")
Rel(feedService, subscriptionsQueue, "Consume SUBSCRIPTION_EVENT, UNSUBSCRIPTION_EVENT event and update followers feeds")
Rel(postSystem, postMessageQueue, "Produce POST_CREATED events")
Rel(followingSystem, subscriptionsQueue, "Produce SUBSCRIPTION_EVENT, UNSUBSCRIPTION_EVENT events")

Rel(recommendSystem, recommendationsMessageQueue, "Produce posts recommendations")
Rel(feedService, recommendationsMessageQueue, "Consume event and update recommended feed")
@enduml